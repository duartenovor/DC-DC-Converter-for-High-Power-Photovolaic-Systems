#ifndef __CONVERTER_H__
#define __CONVERTER_H__

/**< #########################################################################################
 * ###################################     Defines     #######################################
 * #########################################################################################*/

//#define INC 0.3
#define MAX 2500      //Nao chegar aos 100% de Duty (3750)
#define MIN 0

/**< #########################################################################################
 * ##############################     Global Variables     ###################################
 * #########################################################################################*/

/* --- PI Variables --- */
typedef struct{
    int i;
    int u;
    float error;
    float prev_error;
    float sum_errors;
    float sum_errors_bck;
} pi_t;

/**< #########################################################################################
 * #############################      Protótipo Funções      #################################
 * #########################################################################################*/

void init_struct(pi_t* arm);

void mppt_alg(int vpv, int ipv, float *i_ref);
void pi_alg( pi_t* arm, float i_ref);

#endif /* __CONVERTER_H__ */
